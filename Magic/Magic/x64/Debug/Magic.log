  app.cpp
  card.cpp
  carddeck.cpp
  controller.cpp
  flipcard.cpp
  mana.cpp
  types.cpp
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\utility(236): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(918): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64,0>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&) noexcept' being compiled
          with
          [
              _Kty=std::string,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(920): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64,0>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&) noexcept' being compiled
          with
          [
              _Kty=std::string,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1022): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64>>(_Alloc &,_Objty *const ,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,int>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,int>>>::void_pointer>>,
              _Ty=std::pair<const std::string,int>,
              _Objty=std::pair<const std::string,int>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1029): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64>>(_Alloc &,_Objty *const ,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,int>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,int>>>::void_pointer>>,
              _Ty=std::pair<const std::string,int>,
              _Objty=std::pair<const std::string,int>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1200): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,int>,
              _Alloc=std::allocator<std::pair<const std::string,int>>,
              _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1201): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,int>,
              _Alloc=std::allocator<std::pair<const std::string,int>>,
              _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
          ]
  c:\users\spart\documents\visual studio 2017\projects\armando\magic\magic\types.cpp(34): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,int,_Pr,_Alloc,false>>::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,int>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,int>>
          ]
  c:\users\spart\documents\visual studio 2017\projects\armando\magic\magic\types.cpp(34): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,int,_Pr,_Alloc,false>>::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,unsigned __int64> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,int>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,int>>
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\utility(236): warning C4267: 'initializing': conversion from 'size_t' to 'const int', possible loss of data
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(918): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,0>(std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&) noexcept' being compiled
          with
          [
              _Kty=int,
              _Ty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(920): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,0>(std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&) noexcept' being compiled
          with
          [
              _Kty=int,
              _Ty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1022): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>(_Alloc &,_Objty *const ,std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const int,std::string>,std::_Default_allocator_traits<std::allocator<std::pair<const int,std::string>>>::void_pointer>>,
              _Ty=std::pair<const int,std::string>,
              _Objty=std::pair<const int,std::string>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1029): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>(_Alloc &,_Objty *const ,std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const int,std::string>,std::_Default_allocator_traits<std::allocator<std::pair<const int,std::string>>>::void_pointer>>,
              _Ty=std::pair<const int,std::string>,
              _Objty=std::pair<const int,std::string>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1200): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>(std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&)' being compiled
          with
          [
              _Ty=std::pair<const int,std::string>,
              _Alloc=std::allocator<std::pair<const int,std::string>>,
              _Traits=std::_Tmap_traits<int,std::string,std::less<int>,std::allocator<std::pair<const int,std::string>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1201): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>(std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&)' being compiled
          with
          [
              _Ty=std::pair<const int,std::string>,
              _Alloc=std::allocator<std::pair<const int,std::string>>,
              _Traits=std::_Tmap_traits<int,std::string,std::less<int>,std::allocator<std::pair<const int,std::string>>,false>
          ]
  c:\users\spart\documents\visual studio 2017\projects\armando\magic\magic\types.cpp(34): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,_Pr,_Alloc,false>>::emplace<std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>(std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&)' being compiled
          with
          [
              _Ty=std::pair<const int,std::string>,
              _Kty=int,
              _Pr=std::less<int>,
              _Alloc=std::allocator<std::pair<const int,std::string>>
          ]
  c:\users\spart\documents\visual studio 2017\projects\armando\magic\magic\types.cpp(34): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,_Pr,_Alloc,false>>::emplace<std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>>(std::pair<unsigned __int64,std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &&)' being compiled
          with
          [
              _Ty=std::pair<const int,std::string>,
              _Kty=int,
              _Pr=std::less<int>,
              _Alloc=std::allocator<std::pair<const int,std::string>>
          ]
  view.cpp
  Generating Code...
  Magic.vcxproj -> C:\Users\spart\Documents\Visual Studio 2017\Projects\Armando\Magic\x64\Debug\Magic.exe
