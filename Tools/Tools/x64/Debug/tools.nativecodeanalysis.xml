<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>224</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Tools::toUpper</FUNCTION>
    <DECORATED>?toUpper@Tools@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z</DECORATED>
    <FUNCLINE>223</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Tools::toLower</FUNCTION>
    <DECORATED>?toLower@Tools@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z</DECORATED>
    <FUNCLINE>228</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>262</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::wordSplit</FUNCTION>
    <DECORATED>?wordSplit@Tools@@SA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z</DECORATED>
    <FUNCLINE>233</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::wordSplit</FUNCTION>
    <DECORATED>?wordSplit@Tools@@SA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z</DECORATED>
    <FUNCLINE>233</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>319</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::wordSplit</FUNCTION>
    <DECORATED>?wordSplit@Tools@@SA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4CASE@@@Z</DECORATED>
    <FUNCLINE>285</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>335</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::wordSplit</FUNCTION>
    <DECORATED>?wordSplit@Tools@@SA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4CASE@@@Z</DECORATED>
    <FUNCLINE>285</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>375</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::tokenSplit</FUNCTION>
    <DECORATED>?tokenSplit@Tools@@SA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z</DECORATED>
    <FUNCLINE>344</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>397</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::tokenSplit</FUNCTION>
    <DECORATED>?tokenSplit@Tools@@SA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z</DECORATED>
    <FUNCLINE>344</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>418</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::trim</FUNCTION>
    <DECORATED>?trim@Tools@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z</DECORATED>
    <FUNCLINE>404</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>435</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Tools::trimDelimiters</FUNCTION>
    <DECORATED>?trimDelimiters@Tools@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z</DECORATED>
    <FUNCLINE>430</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>509</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Tools::removeAll</FUNCTION>
    <DECORATED>?removeAll@Tools@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@0@Z</DECORATED>
    <FUNCLINE>507</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>657</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Tools::createDictionary</FUNCTION>
    <DECORATED>?createDictionary@Tools@@SA?AV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@0@Z</DECORATED>
    <FUNCLINE>634</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>709</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::XMLParser</FUNCTION>
    <DECORATED>?XMLParser@Tools@@SAPEAV?$XMLTree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z</DECORATED>
    <FUNCLINE>666</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>710</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::XMLParser</FUNCTION>
    <DECORATED>?XMLParser@Tools@@SAPEAV?$XMLTree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z</DECORATED>
    <FUNCLINE>666</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>773</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Tools::XMLParser</FUNCTION>
    <DECORATED>?XMLParser@Tools@@SAPEAV?$XMLTree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z</DECORATED>
    <FUNCLINE>666</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>tools.cpp</FILENAME>
      <LINE>777</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Tools::XMLParser</FUNCTION>
    <DECORATED>?XMLParser@Tools@@SAPEAV?$XMLTree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z</DECORATED>
    <FUNCLINE>666</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>xmltree.h</FILENAME>
      <LINE>132</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26434</DEFECTCODE>
    <DESCRIPTION>Function 'XMLTree&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::XMLTree&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;' hides a non-virtual function 'XMLNode&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::XMLNode&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;' (c.128).</DESCRIPTION>
    <FUNCTION>XMLTree&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$XMLTree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@QEAA@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>132</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>xmltree.h</FILENAME>
      <LINE>125</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26434</DEFECTCODE>
    <DESCRIPTION>Function 'XMLTree&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::XMLTree&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;' hides a non-virtual function 'XMLNode&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::XMLNode&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;' (c.128).</DESCRIPTION>
    <FUNCTION>XMLTree&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$XMLTree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@QEAA@XZ</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>xmltree.h</FILENAME>
      <LINE>125</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>XMLTree&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$XMLTree@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@QEAA@XZ</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\spart\documents\visual studio 2017\projects\armando\tools\tools\</FILEPATH>
      <FILENAME>xmlnode.h</FILENAME>
      <LINE>45</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>XMLNode&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$XMLNode@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@@QEAA@XZ</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>